[[plugins]]
repo = 'kana/vim-operator-user'

# for linter
[[plugins]]
repo = 'w0rp/ale'
hook_add  = '''
let g:ale_sign_error = '×'
let g:ale_sign_warning = '▲'
let g:ale_sign_column_always = 1
let g:ale_completion_enabled = 1
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_enter = 0
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_open_list = 1
let g:ale_keep_list_window_open = 1
let g:ale_python_flake8_executable = 'python3'
nmap <silent> <C-j> <Plug>(ale_next_wrap)

let g:ale_linters = {
\  'python' : ['flake8'],
\  'asm'    : ['nasm']
\}
'''

# for async
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'kshenoy/vim-signature'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'


[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:python3_host_prog = '/usr/bin/python3'
let g:deoplete#enable_at_startup = 1
'''

# for :mks
[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
let g:tagbar_type_rust = {
    \ 'ctagsbin': '/usr/local/bin/ctags',
    \ 'ctagstype' : 'rust',
    \ 'kinds' : [
        \'T:types,type definitions',
        \'f:functions,function definitions',
        \'g:enum,enumeration names',
        \'s:structure names',
        \'m:modules,module names',
        \'c:consts,static constants',
        \'t:traits,traits',
        \'i:impls,trait implementations',
    \]
    \}
let g:tagbar_type_markdown = {
    \ 'ctagstype': 'markdown',
    \ 'ctagsbin' : '$HOME/github/markdown2ctags/markdown2ctags.py',
    \ 'ctagsargs' : '-f - --sort=yes',
    \ 'kinds' : [
        \ 's:sections',
        \ 'i:images'
    \ ],
    \ 'sro' : '|',
    \ 'kind2scope' : {
        \ 's' : 'section',
    \ },
    \ 'sort': 0,
\ }
'''

# Quickfix highlighter
[[plugins]]
repo = 'jceb/vim-hier'
hook_add = '''
let g:hier_enabled = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_theme = 'gruvbox'
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline#extensions#tabline#enabled = 1

function! AirlineThemePatch(palette)
  let a:palette.accents.running = ['', '', '', '', '']
  let a:palette.accents.success = ['#98971a', '', 'green', '', '']
  let a:palette.accents.failure = ['#9d0006', '', 'red', '', '']
endfunction
let g:airline_theme_patch_func = 'AirlineThemePatch'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_sign_added = '+'
let g:gitgutter_sign_modified = '~'
let g:gitgutter_sign_removed = '-'
set signcolumn=yes
'''

[[plugins]]
repo = 'scrooloose/NERDTree'
hook_add = '''
let NERDTreeShowHidden=1
'''

[[plugins]]
repo = 'tpope/vim-fugitive'


[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = get(g:, 'quickrun_config', {})
let g:quickrun_config._ = {
    \ 'runner'  : 'vimproc',
    \ 'runner/vimproc/updatetime' : 60,
    \ 'outputter': 'error',
    \ 'outputter/error/success' : 'buffer',
    \ 'outputter/error/error' : 'quickfix',
    \ 'outputter/buffer/split' : 'rightbelow 8sp',
    \ 'outputter/buffer/close_on_empty': 1,
    \ 'cpp' : {
    \   'type' : 'cpp/g++',
    \   'cmdopt' : '-Wall -pedantic',
    \   },
    \ 'python': {
    \   'command': 'python3'
    \   }
    \ }
au FileType qf nnoremap <silent><buffer>q :quit<CR>
'''

