[[plugins]]
repo = 'kana/vim-operator-user'

# for linter
[[plugins]]
repo = 'w0rp/ale'
hook_add  = '''
let g:ale_set_signs = 1
let g:ale_sign_error = '×'
let g:ale_sign_warning = '×'
let g:ale_sign_column_always = 1
let g:ale_completion_enabled = 1
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_enter = 0
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_open_list = 1
let g:ale_keep_list_window_open = 1
let g:ale_python_flake8_executable = 'python3'
highlight AleErrorLine ctermfg=yellow
nmap <silent> <C-j> <Plug>(ale_next_wrap)

let g:ale_linters = {
\  'asm'    : ['nasm']
\}
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'junegunn/fzf'
hook_add = '''
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'green'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'yellow'],
  \ 'info':    ['fg', 'yellow'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'blue'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }
'''

# for async
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
let g:neosnippet#snippets_directory='~/dotfiles/.vim/userconf/neosnippet'
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'kshenoy/vim-signature'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

# for :mks
[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
let g:tagbar_type_rust = {
    \ 'ctagsbin': '/usr/local/bin/ctags',
    \ 'ctagstype' : 'rust',
    \ 'kinds' : [
        \'T:types,type definitions',
        \'f:functions,function definitions',
        \'g:enum,enumeration names',
        \'s:structure names',
        \'m:modules,module names',
        \'c:consts,static constants',
        \'t:traits,traits',
        \'i:impls,trait implementations',
    \]
    \}
let g:tagbar_type_markdown = {
    \ 'ctagstype': 'markdown',
    \ 'ctagsbin' : '$HOME/github/markdown2ctags/markdown2ctags.py',
    \ 'ctagsargs' : '-f - --sort=yes',
    \ 'kinds' : [
        \ 's:sections',
        \ 'i:images'
    \ ],
    \ 'sro' : '|',
    \ 'kind2scope' : {
        \ 's' : 'section',
    \ },
    \ 'sort': 0,
\ }
'''

# Quickfix highlighter
[[plugins]]
repo = 'jceb/vim-hier'
hook_add = '''
let g:hier_enabled = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-fugitive']
hook_add = '''
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_theme = 'gruvbox'
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#ale#enabled = 1
let g:airline_symbols.branch = 'ᚠ'
let g:airline#extensions#default#layout = [
    \ ['a', 'b', 'c'],
    \ ['x', 'y', 'z', 'error', 'warning']
\ ]

call airline#parts#define_accent('virtualenv', 'yellow')
let g:airline_section_x = airline#section#create(['%{&filetype}'])
let g:airline_section_y = airline#section#create(['ffenc'])
let g:airline_section_z = airline#section#create(
    \ ['㏑: %l', ' c: %c']
\ )

function! AirlineThemePatch(palette)
  let a:palette.accents.running = ['#98971a', '', 'green', '', '']
  let a:palette.accents.success = ['#98971a', '', 'green', '', '']
  let a:palette.accents.failure = ['#9d0006', '', 'red', '', '']
  let a:palette.accents.yellow = ['#d79921', '', 'yellow', '', 'bold']
endfunction
let g:airline_theme_patch_func = 'AirlineThemePatch'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
set signcolumn=yes
let g:gitgutter_sign_added = '・'
let g:gitgutter_sign_modified = '・'
let g:gitgutter_sign_removed = '・'
let g:gitgutter_sign_modified_removed = '・'
'''

[[plugins]]
repo = 'scrooloose/NERDTree'
hook_add = '''
let NERDTreeShowHidden=1
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
depends = ['NERDTree']
hook_add = '''
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "~",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : 'i',
    \ "Unknown"   : "?"
    \ }
'''


[[plugins]]
repo = 'tpope/vim-fugitive'


[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = get(g:, 'quickrun_config', {})
let g:quickrun_config._ = {
    \ 'runner'  : 'vimproc',
    \ 'outputter': 'error',
    \ 'outputter/error/success' : 'buffer',
    \ 'outputter/error/error' : 'quickfix',
    \ 'outputter/buffer/split' : 'rightbelow 8sp',
    \ 'outputter/buffer/close_on_empty': 1
\ }
let g:quickrun_config.cpp = {
    \   'type' : 'cpp/g++',
    \   'cmdopt' : '-Wall -pedantic'
\ }
let g:quickrun_config.python = {
    \ 'type'   : 'python',
    \ 'command': 'python',
    \ 'cmdopt' : '-u'
\ }
au FileType qf nnoremap <silent><buffer>q :quit<CR>
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'ap/vim-css-color'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'gilligan/vim-lldb'
