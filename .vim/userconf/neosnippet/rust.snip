

snippet     atcoder
abbr        fn main
        use std::io;


        fn main() {
            ${0}
        }


        #[allow(dead_code)]
        fn read<T>() -> Vec<T>
        where T:
            std::str::FromStr,
            T::Err: std::fmt::Debug {

            let mut buf = String::new();
            io::stdin().read_line(&mut buf).unwrap();
            buf.split_whitespace()
                .map(|s| s.trim().parse().unwrap())
                .collect()
        }

        #[allow(dead_code)]
        fn read_one<T>() -> T
        where T:
            std::str::FromStr,
            T::Err: std::fmt::Debug {

            let mut buf = String::new();
            io::stdin().read_line(&mut buf).unwrap();
            buf.trim().parse().unwrap()
        }


snippet     let2
abbr        let (${0}, ${1})
        let (${1}, ${2}) = {
            let i = read::<${3}>();
            (i[0], i[1])
        };
        ${0}

snippet     let3
abbr        let (${1}, ${2}, ${3})
options     head
        let (${1}, ${2}, ${3}) = {
            let i = read::<${4}>();
            (i[0], i[1], i[2])
        };
        ${0}
